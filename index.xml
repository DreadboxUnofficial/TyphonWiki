<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on Typhon Wiki</title><link>https://example.com/</link><description>Recent content in Introduction on Typhon Wiki</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://example.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Creating a New Theme</title><link>https://example.com/posts/creating-a-new-theme/</link><pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate><guid>https://example.com/posts/creating-a-new-theme/</guid><description>Introduction # This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description></item><item><title>Migrate to Hugo from Jekyll</title><link>https://example.com/posts/migrate-from-jekyll/</link><pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate><guid>https://example.com/posts/migrate-from-jekyll/</guid><description>Move static content to static # Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description></item><item><title>Forums</title><link>https://example.com/docs/community/forums/</link><pubDate>Wed, 11 Nov 2020 22:18:20 -0800</pubDate><guid>https://example.com/docs/community/forums/</guid><description> This Elektronauts thread has several owners and has been a good place to track the first few months of people experiences. A lot of info on this site was lifted from this thread.</description></item><item><title>Midi Cc</title><link>https://example.com/docs/midi/midi-cc/</link><pubDate>Wed, 11 Nov 2020 22:16:55 -0800</pubDate><guid>https://example.com/docs/midi/midi-cc/</guid><description>MIDI CC List # This is the list of MIDI CC, as of firmware v2.0.1. All are CC, so far there aren&amp;rsquo;t any NRPN.
CC# Function Notes 1 MOD WHEEL 2 CC2 3 RESONANCE 4 CUTOFF 5 WAVESHAPE 6 OSC2 OFFSET 7 GLIDE 8 VCO LEVEL 9 FILTER TRACKING &amp;hellip; 11 FILTER FM 12 FX1 HP CUTOFF 13 FX1 HP RESONANCE 14 FX1 PARAMETER 1 15 FX1 PARAMETER 2 16 FX1 MIX 17 FX2 PARAMETER 1 18 FX2 PARAMETER 2 19 FX2 PARAMETER 3 20 FX2 FEED 21 FX2 MIX 22 FX3 PARAMETER 1 23 FX3 PARAMETER 2 24 FX3 FEED 25 FX3 PARAMETER 4 26 FX3 MIX 27 FILTER EG ATTACK 28 FILTER EG DECAY 29 FILTER EG SUSTAIN 30 FILTER EG RELEASE 31 FILTER EG TIME &amp;hellip; 33 FILTER EG LEVEL 34 VCA EG ATTACK 35 VCA EG DECAY 36 VCA EG SUSTAIN 37 VCA EG RELEASE 38 VCA EG TIME 39 VCA EG LVL 40 M1 PARAMETER 1 41 M1 PARAMETER 2 42 M1 PARAMETER 3 43 M1 CV LEVEL 44 M1 CV1 LEVEL 45 M1 CV2 LEVEL 46 M1 WAVE LEVEL 47 M1 CUTOFF LEVEL 48 M1 RESONANCE LEVEL 49 M1 EG LEVEL LEVEL 50 M1 VCA LEVEL 51 M1 FX1 LEVEL 52 M1 FFM LEVEL 53 M1 FX2 LEVEL 54 M1 DELAY TIME LEVEL 55 M1 FX3 LEVEL 56 M2 PARAMETER 1 57 M2 PARAMETER 2 58 M2 PARAMETER 3 59 M2 CV LEVEL 60 M2 CV1 LEVEL 61 M2 CV2 LEVEL 62 M2 WAVE LEVEL 63 M2 CUTOFF LEVEL 64 M2 RESONANCE LEVEL 65 M2 EG LEVEL LEVEL 66 M2 VCA LEVEL 67 M2 FX1 LEVEL 68 M2 FFM LEVEL 69 M2 FX2 LEVEL 70 M2 DELAY TIME LEVEL 71 M2 FX3 LEVEL 72 M3 PARAMETER 1 73 M3 PARAMETER 2 74 M3 PARAMETER 3 75 M3 CV LEVEL 76 M3 CV1 LEVEL 77 M3 CV2 LEVEL 78 M3 WAVE LEVEL 79 M3 CUTOFF LEVEL 80 M3 RESONANCE LEVEL 81 M3 EG LEVEL LEVEL 82 M3 VCA LEVEL 83 M3 FX1 LEVEL 84 M3 FFM LEVEL 85 M3 FX2 LEVEL 86 M3 DELAY TIME LEVEL 87 M3 FX3 LEVEL 88 SEQ LENGTH 89 SEQ DIVISION 90 SEQ PROBABILITY 91 SEQ SWING Reference Docs # The firmware update ZIP files (latest: TYPHON-Firmware-Update-V2.</description></item><item><title>(Hu)go Template Primer</title><link>https://example.com/posts/goisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://example.com/posts/goisforlovers/</guid><description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description></item><item><title>Getting Started with Hugo</title><link>https://example.com/posts/hugoisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://example.com/posts/hugoisforlovers/</guid><description>Step 1. Install Hugo # Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs # Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:</description></item></channel></rss>